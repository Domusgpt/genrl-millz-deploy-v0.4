const express=require('express'),multer=require('multer'),cors=require('cors'),fs=require('fs'),path=require('path');const app=express(),PORT=process.env.PORT||8080,DATA_MOUNT_PATH='/app/data',DATA_FILE_PATH=path.join(DATA_MOUNT_PATH,'current_magazine_data.json'),PUBLIC_DIR=path.join(__dirname,'public');try{if(!fs.existsSync(DATA_MOUNT_PATH))fs.mkdirSync(DATA_MOUNT_PATH,{recursive:!0}),console.log(`Created potential data directory: ${DATA_MOUNT_PATH}`)}catch(e){console.error(`Warning: Could not ensure data directory ${DATA_MOUNT_PATH}. Check volume mount. Error: ${e.message}`)}if(fs.existsSync(DATA_FILE_PATH))console.log(`Data file found at: ${DATA_FILE_PATH}`);else{console.log(`Data file not found at ${DATA_FILE_PATH}, creating initial...`);const e={cycleNumber:0,transmissionDate:"INITIALIZING :: STANDBY",layoutConfiguration:{templateName:"standard-grid",featuredVisualTargetId:"init-directive",moduleOrder:["init-directive"]},mainContent:[{type:"directive",id:"init-directive",title:"// STANDBY :: AWAITING TRANSMISSION //",content:"<p>Channel open. Awaiting first operational directive...</p>"}],footerMantra:"// SYSTEM ONLINE :: AWAITING SIGNAL //",styleOverrides:{}};try{fs.mkdirSync(path.dirname(DATA_FILE_PATH),{recursive:!0}),fs.writeFileSync(DATA_FILE_PATH,JSON.stringify(e,null,2),'utf8'),console.log(`Created initial data file: ${DATA_FILE_PATH}`)}catch(e){console.error(`FATAL: Failed to create initial data file at ${DATA_FILE_PATH}: ${e}`)}}app.use(cors()),app.use(express.json()),app.use('/dashboard_assets',express.static(path.join(PUBLIC_DIR,'dashboard_assets'))),app.get('/dashboard',(e,r)=>r.sendFile(path.join(PUBLIC_DIR,'dashboard.html'))),app.use(express.static(PUBLIC_DIR));const storage=multer.memoryStorage(),upload=multer({storage:storage,limits:{fileSize:5242880},fileFilter:(e,r,o)=>{'application/json'===r.mimetype?o(null,!0):o(new Error('Invalid file type. Only JSON is allowed.'),!1)}});app.post('/upload',upload.single('magazineDataFile'),(e,r)=>{if(!e.file)return r.status(400).json({success:!1,message:'No file uploaded.'});try{const o=JSON.parse(e.file.buffer.toString('utf8'));if(!['cycleNumber','transmissionDate','layoutConfiguration','mainContent','footerMantra','styleOverrides'].every(e=>o.hasOwnProperty(e))||!Array.isArray(o.mainContent))throw new Error('Invalid JSON structure.');if(o.mainContent.some(e=>!e||!e.id||!e.type))throw new Error('Invalid JSON: mainContent items need id/type.');o.layoutConfiguration?.featuredVisualTargetId&&!o.mainContent.some(e=>e&&e.id===o.layoutConfiguration.featuredVisualTargetId)&&console.warn(`Warning: featuredVisualTargetId "${o.layoutConfiguration.featuredVisualTargetId}" not found.`);fs.writeFileSync(DATA_FILE_PATH,JSON.stringify(o,null,2),'utf8'),console.log(`Success: Updated ${path.basename(DATA_FILE_PATH)} Cycle ${o.cycleNumber}`),r.status(200).json({success:!0,message:`Data Cycle ${o.cycleNumber} uploaded!`})}catch(e){console.error('Upload Error:',e.message);let o=500,t='Server error.';e instanceof SyntaxError?o=400:e.message.includes('Invalid file type')||e.message.includes('Invalid JSON')?o=400:null,t=e.message||t,r.status(o).json({success:!1,message:t})}}),app.get('/api/current-data',(e,r)=>{try{if(!fs.existsSync(DATA_FILE_PATH))return r.status(404).json({message:'Data file not found.'});r.setHeader('Content-Type','application/json'),fs.createReadStream(DATA_FILE_PATH).pipe(r)}catch(e){console.error(`API Error reading ${DATA_FILE_PATH}:`,e),r.status(500).json({message:'Error retrieving data.'})}}),app.get('*',(e,r)=>{e.path.includes('.')||e.path.startsWith('/api/')||'/upload'===e.path||e.path.startsWith('/dashboard')?r.status(404).send('Resource Not Found'):r.sendFile(path.join(PUBLIC_DIR,'index.html'))}),app.use((e,o,t,s)=>{console.error("Unhandled Error:",e.stack||e),t.status(500).send('Internal Server Error!')}),app.listen(PORT,()=>{console.log(`\n--- GEN-R-L MiLLz Server Online ---`),console.log(`Listening on port ${PORT}`),console.log(`Data file expected at: ${DATA_FILE_PATH}`)});
